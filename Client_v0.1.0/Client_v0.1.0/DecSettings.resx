<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="carde1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHIAAACjCAYAAABWv0r3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAAa5SURBVHhe7ZxN
        bBRlGMd7MxETjwKl23XBpsUWCm2K/YZSaEtRiZgYCBFiIFEOVsFghUo0HoQaSIC2Qm2rNNICB/GmFpVq
        gPARSAwfBxMIXvRovHF7nGe2s52dnZ3OftCd/vf/T355d2ff953d+fWZnbbvbsHBLZVy/tNm+efqdnl0
        cav89TOZS6izhxNbpODQ9uUy0dsij2/ukP9+3zbNbyRw2P0Y/Du5TR5f3y5yf5cUHN5RKWPddXL52Hq5
        dKTV5JcvWuXWyQ65N9JJAsLd4U6ZPLou5mjyyDr56fMW+fP8a4bInVGRZ/fXyw1D3JW+dmlZtliqIvNk
        U22JvNFUSnKM3cPq8mJZEV5kelJU7MPvNruIPD4tsjJcJHWlYaktIbnE7iEm8kSbt8irfW0xkRWhebKq
        5FmSY+weLJH6tqcyk4q81j9dkTrIKmGSe9SHJXK8p1luD24w3iuTiLwx0BET6TYZyS2WyIH36uXuyEaK
        nKtQJAgUCQJFgkCRIFAkCBQJAkWCQJEg2EXeGen0Fql/nC1d8JTrRCS3pFyR1YtZkUGkoSwkFaFC6e+q
        46l1LsP3SBAoEgSKBIEiQbCL1PtJVwhQZLDxLVIfpMjgEifSa82OfRWd20Qkt9hFeq7Zsa+i00Fuk5Hc
        oD7sIj0vduyr6BrL5pOAUFf6nDQsXeBfpP1ix75IlgSDtETaF8mS3FKzJNqmJbKACVwoEiQUCRKKBAlF
        goQiQUKRIKFIkFAkSCgSJBQJEooECUWChCJBQpEgoUiQUCRIKBIkFAkSigQJRYKEIkFCkSChSJBQJEgo
        EiQUCRKKBAlFgoQiQUKRIKFIkFAkSCgSJBQJEooECUWChCJBQpEgoUiQUCRIKBIkFAkSigQJRYKEIkFC
        kSChSJBQJEgoEiQUCRKKBAlFgoQiQUKRIKFIkFAkSCgSJBQJEooECUWChCJBQpEgoUiQUCRIKBIkFAkS
        igQJRYKEIkFCkSChSJBQJEgoEiQUCRKKBAlFgoQiQUKRIKFIkFAkSCgSJBQJEooECUWChCJBYhd5Z6ST
        IudqUqrIphcjsrz4aYoMYBrKQlIRKpT+rjpvkdcG2s2KrF78DEUGMGvKw1IZLpKBd2u9RV7pa5fGsvkk
        4MxYkVdOtBnGC0nAmVnk8XZT5s2TG+TCZ2tktLtJzuwnTsZ7muXcwWY5a7R2nNu0n/2+tS2h34Hpx+zb
        LcZ7ovtVgRYzizROrypT3y9vD26QW6dIEPEnckomCS7+RZJ4AnZsKDJdKBKEOSfS5XxMgoe3SKODXq2S
        4OMtUstWq5IEHk+RarphaVhqS8JmS5JQ5oHffl54jC0vWjTz31r1vx+ryyPStPR5qVlSLMvDRVJZXCTL
        DLT1i2d/nXNq3thtN5zjXIjtx228YuubEenMZ38eWUK9aDvQ5esfyxGz88dbq+T0h41yel+DjO1vjOPb
        j6I4t2vf0e5GGe+J32711ccH99TL8AfROa37Tr522acy2h2/Xfej+/tqb+I8Q3uifa0xui99Htpft0Vf
        Q+J+nPtQ9PkM7a1P2K64HR9FX6PzOaWL7lvb1eVTIv2tEIhI6YKFxgtqkgdnXpE/hjpJmtwbcd+eKipN
        21hF+hVZtnCh+ROtf2t1XvaSHGBchF7rb8+CSNsvoiQJejXpbK3bWYIiZwunzCyh1ciKDBIZCqbILHK1
        L83jkUG1ZlSRerl7e7ATUqTKsIQkFeM88BlWk2+s4+1y3CnSwCkuJZGzKdNFJCvSQEXZpSXcNuRY2xJw
        Csy2yGTzJTnmeSvSLs2tNZl6fUllWmRbooWPeVmRBq7yHMwo8UmSwg9I/op8AlXklD4bPwSsyAxFJpOW
        rH3SpC/y1Nw/taaLm6RkAu194sjSscu8IvNQZIIc4/XbRTmluUrUM4F13LJ4/PLy1Op6gGfAGhMba0k0
        xPiezzqdZ1Fk3r5HJgjxieu4VCQqlkh7VWYJikyBhDGWmFRIZ4wHeVuRSjoSg05eikQirysSkfRF5vHv
        kUEio4o89X69+YFKUyTJLVNCUxYZXQ7ZKA/GXjW/mEcHkdxx/5to25zqutaqSJHs2VwpR99+SQ7vXEUC
        QO+uGkNkdPG4L5FavkpVJCTLQotIUCiOfmRAb5tfBjGsIlvjRZ470GCuZNbFVhtrSqSj+gWzJcFDv5lM
        P45w//TLcvnYenn0/etRkb1vrZDRfbVysXet/Hi4RX49slYuHW0lAWXSqMKJ3hb54VCLXPikSe6NbTJE
        7pKCvndWynBXtXy5e6XJSRJ4LE+9b1bI9aF2kb93y/8JXwev0GhAkAAAAABJRU5ErkJggg==
</value>
  </data>
</root>